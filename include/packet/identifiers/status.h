#ifndef STATUS_H
#define STATUS_H

#include <stdio.h>

enum UciStatus
{
  STATUS_OK = 0x00,
  STATUS_REJECTED = 0x01,
  STATUS_FAILED = 0x02,
  STATUS_SYNTAX_ERROR = 0x03,
  STATUS_INVALID_PARAM = 0x04,
  STATUS_INVALID_RANGE = 0x05,
  STATUS_INVALID_MSG_SIZE = 0x06,
  STATUS_UNKNOWN_GID = 0x07,
  STATUS_UNKNOWN_OID = 0x08,
  STATUS_READ_ONLY = 0x09,
  STATUS_COMMAND_RETRY = 0x0A,
  STATUS_SESSION_NOT_EXIST = 0x11,
  STATUS_SESSION_DUPLICATE = 0x12,
  STATUS_SESSION_ACTIVE = 0x13,
  STATUS_MAX_SESSIONS_EXCEEDED = 0x14,
  STATUS_SESSION_NOT_CONFIGURED = 0x15,
  STATUS_ACTIVE_SESSIONS_ONGOING = 0x16,
  STATUS_MULTICAST_LIST_FULL = 0x17,
  STATUS_ADDRESS_NOT_FOUND = 0x18,
  STATUS_ADDRESS_ALREADY_PRESENT = 0x19,
  STATUS_RANGING_TX_FAILED = 0x20,
  STATUS_RANGING_RX_TIMEOUT = 0x21,
  STATUS_RANGING_RX_PHY_DEC_FAILED = 0x22,
  STATUS_RANGING_RX_PHY_TOA_FAILED = 0x23,
  STATUS_RANGING_RX_PHY_STS_FAILED = 0x24,
  STATUS_RANGING_RX_MAC_DEC_FAILED = 0x25,
  STATUS_RANGING_RX_MAC_IE_DEC_FAILED = 0x26,
  STATUS_RANGING_RX_MAC_IE_MISSING = 0x27,
  REASON_RESET_POWER_CYCLE = 0x28,
  REASON_RESET_SOFTWARE = 0x29,
  REASON_RESET_WATCHDOG = 0x2A,
  REASON_RESET_BROWNOUT = 0x2B,
};

const char *status_to_s(enum UciStatus status);

#endif // STATUS_H